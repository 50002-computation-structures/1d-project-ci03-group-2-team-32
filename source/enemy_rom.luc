module enemy_rom #(
    COLUMN_DIMENSION = 16d16 : COLUMN_DIMENSION > 0,
    ROW_DIMENSION = 16d16 : ROW_DIMENSION > 0
)(
    input enemy_stage_pointer_out[3],
    output enemy_A_x_rom_out[32],
    output enemy_A_y_rom_out[32],
    output enemy_A_color_rom_out[32],
    output enemy_B_x_rom_out[32],
    output enemy_B_y_rom_out[32],
    output enemy_B_color_rom_out[32],
    output enemy_C_x_rom_out[32],
    output enemy_C_y_rom_out[32],
    output enemy_C_color_rom_out[32]
){
    
    // Each wave: list of x,y positions and colors (2-bit)
    const ENEMY_WAVES_X = {
        // Wave 2
        {4d4, 4d6, 4d8},
        // Wave 1
        {4d2, 4d5, 4d9},
        // Wave 0
        {4d3, 4d6, 4d9}
    }
    
    const ENEMY_WAVES_Y = {
        {4d2, 4d2, 4d2},
        {4d3, 4d3, 4d3},
        {4d4, 4d4, 4d4}
    }
    
    const ENEMY_COLOR = {
        {b01, b10, b11},  
        {b10, b01, b10},
        {b11, b10, b01}
    }
    always{
        enemy_A_x_rom_out = ENEMY_WAVES_X[enemy_stage_pointer_out][0]
        enemy_A_y_rom_out = ENEMY_WAVES_Y[enemy_stage_pointer_out][0]
        enemy_A_color_rom_out = ENEMY_COLOR[enemy_stage_pointer_out][0]
        
        //enemy_A_x_rom_out = 4d8
        //enemy_A_y_rom_out = 4d2
        // Assign values for Enemy B
        enemy_B_x_rom_out = ENEMY_WAVES_X[enemy_stage_pointer_out][1]
        enemy_B_y_rom_out = ENEMY_WAVES_Y[enemy_stage_pointer_out][1]
        enemy_B_color_rom_out = ENEMY_COLOR[enemy_stage_pointer_out][1]
        
        // Assign values for Enemy C
        enemy_C_x_rom_out = ENEMY_WAVES_X[enemy_stage_pointer_out][2]
        enemy_C_y_rom_out = ENEMY_WAVES_Y[enemy_stage_pointer_out][2]
        enemy_C_color_rom_out = ENEMY_COLOR[enemy_stage_pointer_out][2]
    }
}